import groovy.json.JsonSlurperClassic

def jsonParse(def json) {
    new groovy.json.JsonSlurperClassic().parseText(json)
}
pipeline {
  agent { label 'master' }
  environment {
    appName = "variable" 
  }
  stages {
    stage("Stage: Inspección de codigo Sonarqube"){ 
      steps {
          script {			
           echo "Tareas: Inspección de codigo Sonarqube "
        }
      }
    }
    stage("Stage: Pruebas unitarias"){ 
      steps {
          script {			
           echo "Tareas: Pruebas unitarias"
        }
      }
    }
    stage("Stage: Construccion y despliegue amb. Pruebas"){ 
      steps {
          script {			
           echo "Tareas: Construccion y despliegue amb. Pruebas"
        }
      }
    }
    stage("Stage: Pruebas de API (Postman/Newman)"){ 
      steps {
          script {			
           echo "Tareas: Pruebas de API (Postman/Newman)"
        }
      }
    }
    stage("Stage: Pruebas de Funcionales (Selenium)"){ 
      steps {
          script {			
           echos "Tareas: Pruebas de Funcionales (Selenium)"
        }
      }
    }
    stage("Stage: del programador ss1"){ 
      steps {
          script {			
           echo "Tareas: del programador ss1"
           echo "Tareas/Step 2: del programador ss2"
           echo "Cambios del programador ss2 en feature/ss2-1024"
        }
      }
    }
  }
  post {
      always {          
//          deleteDir()
           bat "echo 'fase always: este mensaje va SIEMPRE'"
      }
      success {
            bat "echo 'fase success: este mensaje va si el stage pasa bien'"
        }

      failure {
            bat "echo 'fase failure: este mensaje va si termina mal'"
            bat "echo 'JOB_NAME: ${env.JOB_NAME}, NODE_NAME: ${env.NODE_NAME}'"
      }
      
  }
}  
