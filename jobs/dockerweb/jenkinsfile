
pipeline {
  agent { label 'master' }
 parameters {
        string(name: 'name_container', defaultValue: 'proyecto-qa', description: 'nombre del docker')
        string(name: 'name_imagen', defaultValue: 'iproyecto-qa', description: 'nombre de la imagen')
        string(name: 'tag_imagen', defaultValue: 'latest', description: 'etiqueta de la imagen')
        string(name: 'puerto_imagen', defaultValue: '8080', description: 'puerto a publicar')
    }
    environment {
        name_final = "C${name_container}T${tag_imagen}P${puerto_imagen}"        
    }
    stages {
          stage('info'){
            steps {
                echo "name_final = ${name_final}"
              script{
             bat '''
                  echo "name_final: %name_final%"
                  rem echo %cd%
                  docker ps -q --filter name=charming_allen
                '''
              }
            }
          }
          stage ('1. set comutername to var') {
            steps {
                script {
                    stdout = bat(returnStdout:true , script: "docker ps -q --filter name=charming_allen").trim()
                    result = stdout.readLines().drop(1).join(" ")       
                    
                }
                echo "result = ${result}"
            }       
        }
          stage('stop/rm') {

            when {
                expression { 
                    stdout = bat(returnStdout:true , script: "docker ps -q --filter name=charming_allen").trim()
                    DOCKER_EXIST = stdout.readLines().drop(1).join(" ")
                    echo "DOCKER_EXIST = ${DOCKER_EXIST}"
                    if (DOCKER_EXIST != '') {
                        echo 'if existe docker STOP...'
                    } else {
                        echo 'if not existe NADA...'
                    }
                    return  DOCKER_EXIST != '' 
                }
            }
            steps {
                script{
                    bat '''
                        echo "docker stop %DOCKER_EXIST%"
                    '''
                    }
                    
                }                    
                                  
            }
           
        stage('build') {
            steps {
                script{
                    sh ''' 
                    docker build    jobs/dockerweb/ -t ${name_imagen}:${tag_imagen}
                    '''
                    }
                    
                }                    
                                  
            }
            stage('run') {
            steps {
                script{
                    sh ''' 
                        docker run -dp ${puerto_imagen}:80 --name ${name_final} ${name_imagen}:${tag_imagen}
 
                    '''
                    }
                    
                }                    
                                  
            }
            
          
        }   
    }
